{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/NavComponent.js","components/PrivateRoute.js","components/StyledTextField.js","components/Content/DashboardContent.js","components/Content/DevContent.js","components/Content/SignUp.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","styled","SwipeableDrawer","color","background","width","paddingTop","PrivateRoute","TextField","margin","fontSize","borderColor","DashboardContent","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hr","getHours","min","getMinutes","DevContent","makeStyles","checkmarkLabel","checkmarkLabelMobile","responsiveFontSizes","createMuiTheme","typography","fontFamily","palette","primary","main","secondary","App","window","location","replace","useState","innerWidth","setIsMobileView","addEventListener","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"oRAGMA,G,OAAMC,IAASC,cAAc,CAC/BC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,qDACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kB,GAWCV,EAAIW,O,MCjBNV,IAASW,Y,0FCuBGC,YAAOC,IAAPD,CATT,CACnB,mBAAoB,CAClBE,MAAO,eACPC,WAAY,mBACZC,MAAO,QACPC,WAAY,U,iBCVDC,I,SCoBgBN,YAAOO,IAAPP,CA9Bd,CACbQ,OAAQ,OACRL,WAAY,eACZC,MAAO,MACP,sBAAuB,CACrBF,MAAO,oBAET,UAAW,CACTO,SAAU,UAEZ,UAAW,CACTP,MAAO,mBAET,2BAA4B,CAC1B,aAAc,CACZQ,YAAa,qBAGjB,iCAAkC,CAChC,aAAc,CACZA,YAAa,qBAGjB,6CAA8C,CAC5C,aAAc,CACZA,YAAa,uB,2DCrBHtB,IAASW,YCiCHC,YAAOO,IAAPP,CA9BP,CACbQ,OAAQ,OACRL,WAAY,eACZC,MAAO,MACP,sBAAuB,CACnBF,MAAO,oBAEX,UAAW,CACPO,SAAU,QAEd,UAAW,CACPP,MAAO,mBAEX,2BAA4B,CACxB,aAAc,CACVQ,YAAa,qBAGrB,iCAAkC,CAC9B,aAAc,CACVA,YAAa,qBAGrB,6CAA8C,CAC1C,aAAc,CACVA,YAAa,uBDiBVC,ICVTC,EAAQ,IAAIC,KACZC,EAAKC,OAAOH,EAAMI,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOH,EAAMO,WAAa,GAAGF,SAAS,EAAG,KAC9CG,EAAOR,EAAMS,cACbC,EAAKV,EAAMW,WACXC,EAAMT,OAAOH,EAAMa,cAAcR,SAAS,EAAG,KACjB,GAAD,OAAKG,EAAL,YAAaF,EAAb,YAAmBJ,GAAW,GAAD,OAAKQ,EAAL,YAAWE,GAEvDpC,IAASW,Y,qBAmDZ2B,I,SCWGC,YAAW,CAEzBC,eAAe,CACXnB,SAAS,QAEboB,qBAAqB,CACjBpB,SAAS,Y,cC9GHqB,YAAoBC,YAAe,CAC/CC,WAAY,CACVC,WAAY,cAEdC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,eA4BGE,MAvBf,WAGEC,OAAOC,SAASC,QAAQ,uCAExB,MAAwCC,mBAASH,OAAOI,WAAa,KAArE,mBAAqBC,GAArB,WAGA,OAFAL,OAAOM,iBAAiB,UAAU,WAAOD,EAAgBL,OAAOI,WAAa,QAG3E,cAAC,IAAMG,WAAP,KC3BJC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5e763069.chunk.js","sourcesContent":["import firebase from 'firebase'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: \"AIzaSyAhzZq5rnOPb-asISuG6TZavga2cJtC8jw\",\n    authDomain: \"greyband-95809.firebaseapp.com\",\n    databaseURL: \"https://greyband-95809-default-rtdb.firebaseio.com\",\n    projectId: \"greyband-95809\",\n    storageBucket: \"greyband-95809.appspot.com\",\n    messagingSenderId: \"801372082184\",\n    appId: \"1:801372082184:web:76cb1745f8098521ecc1bd\",\n    measurementId: \"G-ZEWSPPJCED\"\n    // apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    // authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    // databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    // projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    // storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    // messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    // appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    // measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n})\n\nexport const auth = app.auth()\nexport default app","import React, { useContext, useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport { auth } from '../firebase'\n\nconst AuthContext = React.createContext()\nconst firestore = firebase.firestore()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n\n    const [currUser, setCurrUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    async function signup(firstname, lastname, email, password) {\n        const credentials = await auth.createUserWithEmailAndPassword(email, password)\n        const timestamp = new Date()\n        await firestore.collection('users').doc(credentials.user.uid).set({ blows: [], firstname, lastname, accountCreated: firebase.firestore.Timestamp.fromDate(timestamp)})\n    }\n\n    function signin(email, password) {\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function signout() {\n        return auth.signOut()\n    }\n\n    function resetpassword(email) {\n        return auth.sendPasswordResetEmail(email)\n    }\n\n    useEffect(() => {\n        const unsub = auth.onAuthStateChanged(user => {\n            setCurrUser(user)\n            setLoading(false)\n        })\n        return [unsub]\n    }, [])\n\n    const value = {\n        currUser,\n        signup,\n        signin,\n        signout,\n        resetpassword\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n\n}","import React, { useState } from 'react'\nimport { useAuth } from '../contexts/AuthContext'\nimport { NavLink, useHistory } from 'react-router-dom'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Link from '@material-ui/core/Link'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport Box from '@material-ui/core/Box'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { styled } from '@material-ui/core'\n\nconst activeStyles = {\n  color: \"var(--primary)\"\n}\n\nconst drawerStyles = {\n  \"& .MuiPaper-root\": {\n    color: \"var(--light)\",\n    background: \"var(--secondary)\",\n    width: \"15rem\",\n    paddingTop: \"4rem\"\n  }\n}\n\nconst StyledSwipeableDrawer = styled(SwipeableDrawer)(drawerStyles)\n\nconst links = [\n  { label: \"GreyBand\", to: \"/\", requireAuth: false },\n  { label: \"Our Story\", to: \"/story\", requireAuth: false },\n  { label: \"Contact\", to: \"/contact\", requireAuth: false },\n  { label: \"Store\", to: \"/store\", requireAuth: false }]\n\nfunction NavComponent(props) {\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const history = useHistory()\n  const { currUser } = useAuth()\n\n  const toolbarComponents = links.filter(link => link.requireAuth === false || currUser).map((link, i) => (\n    <Link key={i} underline=\"none\" color=\"inherit\" activeStyle={activeStyles} exact component={NavLink} to={link.to} style={{ display: \"flex\" }}><MenuItem>{link.label}</MenuItem></Link>\n  ))\n\n  const drawerComponents = links.filter(link => link.requireAuth === false || currUser).map((link, i) => (\n    <Link key={i} underline=\"none\" color=\"inherit\" activeStyle={activeStyles} exact component={NavLink} to={link.to} onClick={() => setIsMenuOpen(false)}><MenuItem style={{ fontSize: \"x-large\", padding: \"1rem\" }}>{link.label}</MenuItem></Link>\n  ))\n\n  return (\n    <>\n      <AppBar position=\"fixed\" color=\"secondary\" style={{ height: \"4rem\" }} >\n        <Toolbar>\n          <Box style={{ flexGrow:\"1\" }}>\n          <img onClick={() => history.push(\"/\")} style={{ height:\"2.5rem\", marginRight:\"0.5rem\", cursor: \"pointer\"}} src=\"./logo.png\" alt=\"logo\"/>\n          </Box>\n          <Box style={{ display: \"flex\" }}>\n            {!props.isMobileView ? toolbarComponents :\n              <IconButton edge=\"end\" color=\"inherit\" aria-label=\"menu\" onClick={() => setIsMenuOpen(prevIsMenuOpen => !prevIsMenuOpen)}>\n                {isMenuOpen ?\n                  <CloseIcon fontSize=\"large\" /> :\n                  <MenuIcon fontSize=\"large\" />}\n              </IconButton>}\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <StyledSwipeableDrawer open={isMenuOpen} onClose={() => setIsMenuOpen(false)} onOpen={() => setIsMenuOpen(true)}>\n        {drawerComponents}\n      </StyledSwipeableDrawer>\n    </>\n  )\n}\n\nexport default NavComponent\n\n\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\nfunction PrivateRoute({ children, ...props}) {\n\n    const {currUser} = useAuth()\n\n    return (\n        <Route {...props} children={currUser ? children : <Redirect to=\"/signin\" />} />\n    )\n\n}\n\nexport default PrivateRoute","import { styled } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\n\n\nlet textStyles = {\n    margin: \"1.5%\",\n    background: \"var(--light)\",\n    width: \"65%\",\n    '& label.Mui-focused': {\n      color: 'var(--secondary)',\n    },\n    '& label': {\n      fontSize: '0.8rem'\n    },\n    '& input': {\n      color: 'var(--secondary',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'var(--secondary)'\n      }\n    },\n    '& .MuiOutlinedInput-root:hover': {\n      '& fieldset': {\n        borderColor: 'var(--secondary)'\n      }\n    },\n    '& .MuiOutlinedInput-root.Mui-focused:hover': {\n      '& fieldset': {\n        borderColor: 'var(--secondary)'\n      }\n    }\n  }\n  \nexport const StyledTextField = styled(TextField)(textStyles)","import React, { useEffect, useState } from 'react'\nimport firebase from 'firebase'\nimport { useAuth } from '../../contexts/AuthContext'\n\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\n\nconst firestore = firebase.firestore()\n\n\nfunction DashboardContent(props) {\n\n    const [blows, setBlows] = useState([])\n    const [firstname, setFirstname] = useState(\"\")\n    const [lastname, setLastname] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const { currUser, signout } = useAuth()\n\n    function getBlows() {\n        setLoading(true)\n        firestore.collection('users').doc(currUser.uid).onSnapshot(querySnapshot => {\n            try {\n                const items = querySnapshot.data().blows\n                setFirstname(querySnapshot.data().firstname)\n                setLastname(querySnapshot.data().lastname)\n                setBlows(items)\n                setLoading(false)\n            } catch (e) {\n                alert(\"Error\")\n                signout()\n            }\n        })\n    }\n    \n    // Reset scroll on page load\n    useEffect(() => { window.scrollTo(0, 0) }, [])\n    // Loads blows\n    useEffect(getBlows, [currUser.uid, signout])\n    const blowComponents = blows.map((blow, i) => (<Box style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }} key={i}><div style={{ background: i === blows.length - 1 ? \"var(--primary\" : \"var(--secondary-light\", width: \"20rem\", padding: i === blows.length - 1 ? \"0.8rem\" : \"0.5rem\", margin: \"0.2rem\", borderRadius: \"1rem\" }}><Typography variant={i === blows.length - 1 ? \"body2\" : \"caption\"} >{`BAC was ${blow.bac} at ${(blow.timestamp.toDate().getHours() + 11) % 12 + 1}:${String(blow.timestamp.toDate().getMinutes()).padStart(2, '0')} ${blow.timestamp.toDate().getHours() >= 12 ? \"PM\" : \"AM\"} on ${blow.timestamp.toDate().toDateString()}`}</Typography></div></Box>))\n\n    return (\n        <Container style={{ height: \"600px\", display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", textAlign: \"center\", alignContent: \"start\" }}>\n            <Typography variant=\"h1\" style={{ width: \"100%\" }}>Your Dashboard</Typography>\n            <Typography variant=\"h6\">{currUser ? `Welcome ${firstname} ${lastname}` : \"No user is logged in\"}</Typography>\n            <Box style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", width: \"100%\", marginTop: \"2rem\" }}>\n                {loading ? <h1>Loading</h1> : blowComponents.reverse()}\n            </Box>\n        </Container>\n    )\n\n}\n\nexport default DashboardContent","import React, { useEffect, useState } from 'react'\nimport firebase from 'firebase'\nimport { useAuth } from '../../contexts/AuthContext'\n\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { styled } from '@material-ui/core/styles';\n\nlet textStyles = {\n    margin: \"1.5%\",\n    background: \"var(--light)\",\n    width: \"65%\",\n    '& label.Mui-focused': {\n        color: 'var(--secondary)',\n    },\n    '& label': {\n        fontSize: '1rem'\n    },\n    '& input': {\n        color: 'var(--secondary',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: 'var(--secondary)'\n        }\n    },\n    '& .MuiOutlinedInput-root:hover': {\n        '& fieldset': {\n            borderColor: 'var(--secondary)'\n        }\n    },\n    '& .MuiOutlinedInput-root.Mui-focused:hover': {\n        '& fieldset': {\n            borderColor: 'var(--secondary)'\n        }\n    }\n}\n\nconst StyledTextField = styled(TextField)(textStyles)\n\nconst today = new Date()\nconst dd = String(today.getDate()).padStart(2, '0')\nconst mm = String(today.getMonth() + 1).padStart(2, '0')\nconst yyyy = today.getFullYear()\nconst hr = today.getHours()\nconst min = String(today.getMinutes()).padStart(2, '0')\nconst blankForm = { bac: \"\", date: `${yyyy}-${mm}-${dd}`, time: `${hr}:${min}` }\n\nconst firestore = firebase.firestore()\n\nfunction DevContent(props) {\n\n    const [formValues, setFormValues] = useState(blankForm)\n    const { currUser } = useAuth()\n\n    // Reset scroll on page load\n    useEffect(() => { window.scrollTo(0, 0) }, [])\n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setFormValues(prevFormValues => ({ ...prevFormValues, [name]: value }))\n    }\n\n    async function handleSubmit() {\n        if (formValues.bac === \"\" || formValues.date === \"\" || formValues.time === \"\") {\n            return alert(\"Invalid Input\")\n        }\n        const blow = { bac: formValues.bac, timestamp: firebase.firestore.Timestamp.fromDate(new Date(formValues.date + \"T\" + formValues.time)) }\n        console.log(blow)\n        firestore.collection('users').doc(currUser.uid).get().then(async item => {\n            const blows = item.data().blows\n            blows.push(blow)\n            await firestore.collection('users').doc(currUser.uid).update({ blows })\n            setFormValues(blankForm)\n            alert(\"success\")\n        })\n    }\n\n    return (\n        <Container style={{ height: \"650px\", display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", textAlign: \"center\", alignContent: \"start\" }}>\n            <Typography variant=\"h2\" style={{ width: \"100%\" }}>GreyBand Development Tool</Typography>\n            <Box style={{ display: \"flex\", flexWrap: \"wrap\", background: \"var(--secondary-light)\", height: \"60%\", width: props.isMobileView ? \"90%\" : \"60%\", maxWidth: \"500px\", marginTop: \"3rem\", borderRadius: \"1rem\", alignContent: \"center\" }}>\n                <Box style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n                    <StyledTextField type=\"number\" name=\"bac\" label=\"BAC\" variant=\"filled\" value={formValues.bac} onChange={handleChange} />\n                </Box>\n                <Box style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n                    <StyledTextField type=\"date\" name=\"date\" label=\"Date\" variant=\"filled\" InputLabelProps={{ shrink: true }} value={formValues.date} onChange={handleChange} />\n                </Box>\n                <Box style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n                    <StyledTextField type=\"time\" name=\"time\" label=\"Time\" variant=\"filled\" InputLabelProps={{ shrink: true }} value={formValues.time} onChange={handleChange} />\n                </Box>\n                <Box style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: \"1rem\" }}>\n                    <Button style={{ minWidth: \"80px\" }} size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Blow</Button>\n                </Box>\n            </Box>\n        </Container>\n    )\n}\n\nexport default DevContent","import React, { useState } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { useAuth } from '../../contexts/AuthContext'\n\nimport { StyledTextField } from '../StyledTextField'\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Chip from '@material-ui/core/Chip'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst blankForm = { firstname: \"\", lastname: \"\", email: \"\", password: \"\", confirm: \"\", age: false, terms: false }\n\nfunction SignUp(props) {\n\n    const classes = useStyles()\n\n    const [formValues, setFormValues] = useState(blankForm)\n    const [errorState, setErrorState] = useState(\"\")\n    const history = useHistory()\n    const { signup } = useAuth()\n\n    const handleChange = (event) => {\n        const { name, value, type, checked } = event.target\n        if (type === \"checkbox\") {\n            setFormValues(prevFormValues => ({ ...prevFormValues, [name]: checked }))\n        } else {\n            setFormValues(prevFormValues => ({ ...prevFormValues, [name]: value }))\n        }\n    }\n\n    async function handleSubmit() {\n        if (formValues.firstname === \"\" || formValues.lastname === \"\" || formValues.email === \"\" || formValues.password === \"\" || formValues.confirm === \"\" ) {\n            return setErrorState(\"All input fields are requred!\")\n        }\n        if (!formValues.age) {\n            return setErrorState(\"You must be 21 years of age to register!\")\n        }\n        if (!formValues.terms) {\n            return setErrorState(\"The terms and conditions must be accepted!\")\n        }\n        if (formValues.password !== formValues.confirm) {\n            setFormValues(prevFormValues => ({ ...prevFormValues, password: \"\", confirm: \"\" }))\n            return setErrorState(\"Passwords do not match!\")\n        }\n        if (formValues.password.length < 6) {\n            setFormValues(prevFormValues => ({ ...prevFormValues, password: \"\", confirm: \"\" }))\n            return setErrorState(\"Passwords must have at least 6 characters!\")\n        }\n        try {\n            await signup(formValues.firstname, formValues.lastname, formValues.email, formValues.password)\n            setErrorState(false)\n            setFormValues(blankForm)\n            history.push(\"/dashboard\")\n\n        } catch (error) {\n            if (error.code === \"auth/invalid-email\") {\n                return setErrorState(\"Invalid email address!\")\n            }\n            if (error.code === \"auth/email-already-in-use\") {\n                return setErrorState(\"Account with this email already exists!\")\n            }\n            return setErrorState(\"Failed to create account!\")\n        }\n    }\n\n    return (\n        <form onSubmit={(e) => {e.preventDefault(); handleSubmit()}}>\n            <Grid container >\n                <Grid item md={5} style={{background:\"var(--primary)\", display: props.isMobileView ? \"none\":\"block\"}}>\n\n                </Grid>\n                <Grid item xs={12} md={7} style={{background:\"var(--secondary-light)\", padding: props.isMobileView ? \"5.1rem 1rem\":\"5.1rem 2rem\", display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\"}}>\n                    <Typography className=\"light\" variant=\"h5\" gutterBottom>Create GreySun Account</Typography>\n                    <Box style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n                        {errorState && <Chip size=\"small\" style={{ color: \"var(--light)\", background: \"#eb4034\", width: props.isMobileView ? \"80%\" : \"65%\", fontSize: props.isMobileView ? \"0.6rem\" : \"0.8rem\" }} label={errorState} />}\n                    </Box>\n                    <Box style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n                        <StyledTextField style={{width: props.isMobileView ? \"38.5%\" : \"31%\"}} error={errorState !== \"\"} type=\"text\" name=\"firstname\" label=\"First Name\" variant=\"filled\" value={formValues.firstname} onChange={handleChange} />\n                        <StyledTextField style={{width: props.isMobileView ? \"38.5%\" : \"31%\"}} error={errorState !== \"\"} type=\"text\" name=\"lastname\" label=\"Last Name\" variant=\"filled\" value={formValues.lastname} onChange={handleChange} />\n                    </Box>\n                    <Box style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n                        <StyledTextField style={{width: props.isMobileView ? \"80%\" : \"65%\"}} error={errorState !== \"\"} type=\"text\" name=\"email\" label=\"Email\" variant=\"filled\" value={formValues.email} onChange={handleChange} />\n                    </Box>\n                    <Box style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n                        <StyledTextField style={{width: props.isMobileView ? \"80%\" : \"65%\"}} error={errorState !== \"\"} type=\"password\" name=\"password\" label=\"Password\" variant=\"filled\" value={formValues.password} onChange={handleChange} />\n                    </Box>\n                    <Box style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n                        <StyledTextField style={{width: props.isMobileView ? \"80%\" : \"65%\"}} error={errorState !== \"\"} type=\"password\" name=\"confirm\" label=\"Confirm Password\" variant=\"filled\" value={formValues.confirm} onChange={handleChange} />\n                    </Box>\n                    <Box style={{ width: \"100%\", display: \"flex\", flexWrap:\"wrap\", justifyContent: \"center\" }}>\n                        <FormControlLabel style={{width: props.isMobileView ? \"80%\" : \"65%\"}} classes={{label: props.isMobileView ? classes.checkmarkLabelMobile: classes.checkmarkLabel}}\n                            control={<Checkbox name=\"age\" style={{color:\"var(--primary)\"}} onChange={handleChange} checked={formValues.age} />}\n                            label=\"I am over 21 years of age.\"\n                        />\n                        <FormControlLabel style={{width: props.isMobileView ? \"80%\" : \"65%\"}} classes={{label: props.isMobileView ? classes.checkmarkLabelMobile: classes.checkmarkLabel}}\n                            control={<Checkbox name=\"terms\" style={{color:\"var(--primary)\"}} onChange={handleChange} checked={formValues.terms} />}\n                            label=\"I agree to the terms and conditions.\"\n                        />\n                    </Box>\n                    <Box style={{ width: props.isMobileView ? \"80%\" : \"65%\", display: \"flex\", marginTop: \"1rem\", alignItems: \"center\" }}>\n                        <Button type=\"submit\" style={{ minWidth: \"80px\" }} size=\"large\" variant=\"contained\" color=\"primary\">Sign Up</Button>\n                        <Typography onClick={() => history.push(\"/signin\")} style={{ paddingLeft: \"0.5rem\", marginRight: \"auto\", marginLeft: \"auto\", textAlign: \"center\", textDecoration: \"underline\", cursor: \"pointer\", color:\"var(--light)\" }} variant=\"caption\">{props.isMobileView ? \"Existing account?\" : \"Already have an account? Log in!\"}</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n        </form>\n    )\n}\n\nconst useStyles = makeStyles({\n\n    checkmarkLabel:{\n        fontSize:\"1rem\"\n    },\n    checkmarkLabelMobile:{\n        fontSize:\"0.7rem\"\n    }\n\n})\n\n\nexport default SignUp","import './App.css';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {ThemeProvider, createMuiTheme, responsiveFontSizes} from '@material-ui/core/styles'\nimport NavComponent from './components/NavComponent'\nimport ContentComponent from './components/ContentComponent'\nimport FooterComponent from './components/FooterComponent'\nimport React, { useState } from 'react'\nimport { AuthProvider } from './contexts/AuthContext';\n\nconst theme = responsiveFontSizes(createMuiTheme({\n  typography: {\n    fontFamily: \"Montserrat\"\n  },\n  palette: {\n    primary: {\n      main: \"#df731a\"\n    },\n    secondary: {\n      main: \"#111111\"\n    }\n  }\n}))\n\nfunction App() {\n\n  // Redirect to new website\n  window.location.replace(\"https://www.greysuntechnologies.com\");\n\n  const [isMobileView, setIsMobileView] = useState(window.innerWidth < 960);\n  window.addEventListener('resize', () => {setIsMobileView(window.innerWidth < 960)});\n\n  return (\n    <React.StrictMode>\n      {/* <Router>\n        <ThemeProvider theme={theme}>\n          <AuthProvider>\n            <NavComponent isMobileView={isMobileView} />\n            <ContentComponent isMobileView={isMobileView} />\n            <FooterComponent isMobileView={isMobileView} />\n          </AuthProvider>\n        </ThemeProvider>\n      </Router> */}\n    </React.StrictMode>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}